name: Build
on:
  push:
    branches: [main]
    paths-ignore:
      - '**/*.md'
      - '**/*.gitignore'
      - '**/*.gitattributes'
  pull_request:
  release:
    types: [published]  
jobs:
  format:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Install dotnet format
      run: dotnet tool install --global dotnet-format --version "6.*" --add-source https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet6/nuget/v3/index.json
    - name: Format
      run: dotnet-format --verify-no-changes -v detailed
  scan:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - name: Run SonarScanner
      uses: highbyte/sonarscan-dotnet@v2.1.2
      with:
        sonarProjectKey: netboot_logging
        sonarProjectName:  Netboot Logging
        sonarHostname:  https://sonarqube.netboot.fr
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    - name: Build
      run: dotnet build --configuration Release
    - name: Test
      run: dotnet test --no-build --configuration Release
  merge:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    steps:
    - uses: ridedott/merge-me-action@v2.9.126
      with:
        PRESET: DEPENDABOT_PATCH 
        MERGE_METHOD: REBASE
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  pack:
    runs-on: ubuntu-latest
    needs: [build, format]
    if: github.event_name == 'push' || github.event_name == 'release'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    - name: Pack for publish
      if: github.event_name == 'release'
      run: dotnet pack --output ./artifacts --configuration Release -p:PackageVersion=${{ github.event.release.tag_name }}
    - name: Pack for push
      if: github.event_name == 'push'
      run: dotnet pack --output ./artifacts --configuration Release
    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: ./artifacts
  publish:
    runs-on: ubuntu-latest
    needs: pack
    if: github.event_name == 'release'
    steps:
    - name: Setup .NET 6.0
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '6.0.x'
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
        path: ./artifacts
    - name: Publish packages
      run: dotnet nuget push ./artifacts/**/*.nupkg --source nuget.org --api-key ${{secrets.NUGET_API_KEY}} --skip-duplicate
